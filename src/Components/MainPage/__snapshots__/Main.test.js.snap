// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main cocktailsearch should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(CocktailSearch) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Main header should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Example />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Navbar
        expand={false}
        tag="nav"
      >
        <NavbarBrand
          className="title"
          drinks=""
          href="/"
          tag="a"
        >
          Making Cocktails With Avery
        </NavbarBrand>
        <div
          className="pull-right"
        >
          <NavbarToggler
            className="navbar-collapse"
            onClick={[Function]}
            tag="button"
            type="button"
          />
          <Collapse
            appear={false}
            enter={true}
            exit={true}
            in={false}
            isOpen={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            tag="div"
            timeout={350}
            unmountOnExit={false}
          >
            <Nav
              navbar={true}
              tag="ul"
              vertical={false}
            >
              <NavItem
                tag="li"
              >
                <NavLink
                  href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                  tag="a"
                >
                  GitHub
                </NavLink>
              </NavItem>
            </Nav>
          </Collapse>
        </div>
      </Navbar>,
      "className": "navbar navbar-expand-md bg-dark navbar-dark",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <NavbarBrand
            className="title"
            drinks=""
            href="/"
            tag="a"
          >
            Making Cocktails With Avery
          </NavbarBrand>,
          <div
            className="pull-right"
          >
            <NavbarToggler
              className="navbar-collapse"
              onClick={[Function]}
              tag="button"
              type="button"
            />
            <Collapse
              appear={false}
              enter={true}
              exit={true}
              in={false}
              isOpen={false}
              mountOnEnter={false}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              tag="div"
              timeout={350}
              unmountOnExit={false}
            >
              <Nav
                navbar={true}
                tag="ul"
                vertical={false}
              >
                <NavItem
                  tag="li"
                >
                  <NavLink
                    href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                    tag="a"
                  >
                    GitHub
                  </NavLink>
                </NavItem>
              </Nav>
            </Collapse>
          </div>,
        ],
        "expand": false,
        "tag": "nav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Making Cocktails With Avery",
            "className": "title",
            "drinks": "",
            "href": "/",
            "tag": "a",
          },
          "ref": null,
          "rendered": "Making Cocktails With Avery",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NavbarToggler
                className="navbar-collapse"
                onClick={[Function]}
                tag="button"
                type="button"
              />,
              <Collapse
                appear={false}
                enter={true}
                exit={true}
                in={false}
                isOpen={false}
                mountOnEnter={false}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                tag="div"
                timeout={350}
                unmountOnExit={false}
              >
                <Nav
                  navbar={true}
                  tag="ul"
                  vertical={false}
                >
                  <NavItem
                    tag="li"
                  >
                    <NavLink
                      href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                      tag="a"
                    >
                      GitHub
                    </NavLink>
                  </NavItem>
                </Nav>
              </Collapse>,
            ],
            "className": "pull-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "navbar-collapse",
                "onClick": [Function],
                "tag": "button",
                "type": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appear": false,
                "children": <Nav
                  navbar={true}
                  tag="ul"
                  vertical={false}
                >
                  <NavItem
                    tag="li"
                  >
                    <NavLink
                      href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                      tag="a"
                    >
                      GitHub
                    </NavLink>
                  </NavItem>
                </Nav>,
                "enter": true,
                "exit": true,
                "in": false,
                "isOpen": false,
                "mountOnEnter": false,
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "tag": "div",
                "timeout": 350,
                "unmountOnExit": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <NavItem
                    tag="li"
                  >
                    <NavLink
                      href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                      tag="a"
                    >
                      GitHub
                    </NavLink>
                  </NavItem>,
                  "navbar": true,
                  "tag": "ul",
                  "vertical": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <NavLink
                      href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                      tag="a"
                    >
                      GitHub
                    </NavLink>,
                    "tag": "li",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "GitHub",
                      "href": "https://github.com/Avery-Wold/React-Masters-Spring-2019",
                      "tag": "a",
                    },
                    "ref": null,
                    "rendered": "GitHub",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Navbar
          expand={false}
          tag="nav"
        >
          <NavbarBrand
            className="title"
            drinks=""
            href="/"
            tag="a"
          >
            Making Cocktails With Avery
          </NavbarBrand>
          <div
            className="pull-right"
          >
            <NavbarToggler
              className="navbar-collapse"
              onClick={[Function]}
              tag="button"
              type="button"
            />
            <Collapse
              appear={false}
              enter={true}
              exit={true}
              in={false}
              isOpen={false}
              mountOnEnter={false}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              tag="div"
              timeout={350}
              unmountOnExit={false}
            >
              <Nav
                navbar={true}
                tag="ul"
                vertical={false}
              >
                <NavItem
                  tag="li"
                >
                  <NavLink
                    href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                    tag="a"
                  >
                    GitHub
                  </NavLink>
                </NavItem>
              </Nav>
            </Collapse>
          </div>
        </Navbar>,
        "className": "navbar navbar-expand-md bg-dark navbar-dark",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <NavbarBrand
              className="title"
              drinks=""
              href="/"
              tag="a"
            >
              Making Cocktails With Avery
            </NavbarBrand>,
            <div
              className="pull-right"
            >
              <NavbarToggler
                className="navbar-collapse"
                onClick={[Function]}
                tag="button"
                type="button"
              />
              <Collapse
                appear={false}
                enter={true}
                exit={true}
                in={false}
                isOpen={false}
                mountOnEnter={false}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                tag="div"
                timeout={350}
                unmountOnExit={false}
              >
                <Nav
                  navbar={true}
                  tag="ul"
                  vertical={false}
                >
                  <NavItem
                    tag="li"
                  >
                    <NavLink
                      href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                      tag="a"
                    >
                      GitHub
                    </NavLink>
                  </NavItem>
                </Nav>
              </Collapse>
            </div>,
          ],
          "expand": false,
          "tag": "nav",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Making Cocktails With Avery",
              "className": "title",
              "drinks": "",
              "href": "/",
              "tag": "a",
            },
            "ref": null,
            "rendered": "Making Cocktails With Avery",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <NavbarToggler
                  className="navbar-collapse"
                  onClick={[Function]}
                  tag="button"
                  type="button"
                />,
                <Collapse
                  appear={false}
                  enter={true}
                  exit={true}
                  in={false}
                  isOpen={false}
                  mountOnEnter={false}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  tag="div"
                  timeout={350}
                  unmountOnExit={false}
                >
                  <Nav
                    navbar={true}
                    tag="ul"
                    vertical={false}
                  >
                    <NavItem
                      tag="li"
                    >
                      <NavLink
                        href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                        tag="a"
                      >
                        GitHub
                      </NavLink>
                    </NavItem>
                  </Nav>
                </Collapse>,
              ],
              "className": "pull-right",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "navbar-collapse",
                  "onClick": [Function],
                  "tag": "button",
                  "type": "button",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "appear": false,
                  "children": <Nav
                    navbar={true}
                    tag="ul"
                    vertical={false}
                  >
                    <NavItem
                      tag="li"
                    >
                      <NavLink
                        href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                        tag="a"
                      >
                        GitHub
                      </NavLink>
                    </NavItem>
                  </Nav>,
                  "enter": true,
                  "exit": true,
                  "in": false,
                  "isOpen": false,
                  "mountOnEnter": false,
                  "onEnter": [Function],
                  "onEntered": [Function],
                  "onEntering": [Function],
                  "onExit": [Function],
                  "onExited": [Function],
                  "onExiting": [Function],
                  "tag": "div",
                  "timeout": 350,
                  "unmountOnExit": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <NavItem
                      tag="li"
                    >
                      <NavLink
                        href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                        tag="a"
                      >
                        GitHub
                      </NavLink>
                    </NavItem>,
                    "navbar": true,
                    "tag": "ul",
                    "vertical": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <NavLink
                        href="https://github.com/Avery-Wold/React-Masters-Spring-2019"
                        tag="a"
                      >
                        GitHub
                      </NavLink>,
                      "tag": "li",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "GitHub",
                        "href": "https://github.com/Avery-Wold/React-Masters-Spring-2019",
                        "tag": "a",
                      },
                      "ref": null,
                      "rendered": "GitHub",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Main main should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(CocktailSearch) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Main random should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(Random) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Main spiritsearch should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(SpiritSearch) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
